{
    "openapi": "3.0.2",
    "info": {
      "title": "AuthentiDocs API Documentation",
      "description": "This is the RESTful api used in our project AuthentiDocs.",
      "version": "0.1"
    },
    "servers": [
      {
        "url": "/api/v1"
      }
    ],
    "tags": [
      {
        "name": "User",
        "description": "User signup, login, profile routes"
      },
      {
        "name": "Files & Keys",
        "description": "Signed file, key viewing routes"
      },
      {
          "name": "Home Page",
          "description": "Routes used in home page of user"
      },
      {
          "name": "Notice",
          "description": "Retrieving notices"
      },
      {
          "name": "Thread",
          "description": "Thread page routes"
      },
      {
          "name": "Organization",
          "description": "Organization page routes"
      },
      {
          "name": "Team",
          "description": "Team page routes"
      },
      {
          "name": "Addition & Creation",
          "description": "Routes to add/create various objects"
      },
      {
          "name": "test",
          "description": "testing"
      }
    ],
    "paths": {
      "/test": {
        "get": {
          "tags": ["test"],
          "summary": "hemlo",
          "description": "gives hemlo",
          "responses": {
            "200": {
              "description": "successful hemlo",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ret_text": {
                        "type": "string",
                        "example": "hemlo"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/login" :{
        "post":{
          "tags": ["User"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/signup" :{
        "post":{
          "tags": ["User"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/viewuserprofile" :{
        "get":{
          "tags": ["User"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/editprofile":{
        "post":{
          "tags": ["User"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/userworkfiles":{
        "get":{
          "tags": ["User"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/getfiledata":{
        "get":{
          "tags": ["Files & Keys"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/getfilenotes":{
        "get":{
          "tags": ["Files & Keys"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/getprvkey":{
        "get":{
          "tags": ["Files & Keys"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/userorgs":{
        "get":{
          "tags": ["Home Page"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/userteams":{
        "get":{
          "tags": ["Home Page"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/useractthreads" :{
        "get":{
          "tags": ["Home Page"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/userarcthreads":{
        "get":{
          "tags": ["Home Page"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/userorgnotices":{
        "get":{
          "tags": ["Notice"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/userteamnotices":{
        "get":{
          "tags": ["Notice"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/userthreadnotices":{
        "get":{
          "tags": ["Notice"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      
      "/threadlist":{
        "post":{
          "tags": ["Thread"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/threaddatalist":{
        "get":{
          "tags": ["Thread"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/threadfilelist":{
        "get":{
          "tags": ["Thread"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/threadmembers":{
        "get":{
          "tags": ["Thread"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/teamlist" :{
        "post":{
          "tags": ["Team"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/teamdatalist":{
        "get":{
          "tags": ["Team"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/teamthreadlist":{
        "get":{
          "tags": ["Team"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/teammemberlist":{
        "get":{
          "tags": ["Team"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/teamfilelist":{
        "get":{
          "tags": ["Team"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/orglist":{
        "post":{
          "tags": ["Organization"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/orgdatalist":{
        "get":{
          "tags": ["Organization"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }

      },
      "/orgteamlist":{
        "get":{
          "tags": ["Organization"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }

      },
      "/orgthreadlist":{
        "get":{
          "tags": ["Organization"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }

      },
      "/orgfileslist":{
        "get":{
          "tags": ["Organization"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }

      },
      "/orgmemberslist":{
        "get":{
          "tags": ["Organization"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }

      },

      "/addfile":{
        "post":{
          "tags": ["Files & Keys"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }

      },
      "/addmembers":{
        "post":{
          "tags": ["Addition & Creation"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/addthread":{
        "post":{
          "tags": ["Addition & Creation"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/addteam":{
        "post":{
          "tags": ["Addition & Creation"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/addorg":{
        "post":{
          "tags": ["Addition & Creation"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/addnotice":{
        "post":{
          "tags": ["Addition & Creation"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },
      "/addnote":{
        "post":{
          "tags": ["Addition & Creation"],
         "responses": {
          "200":{
            "description": ""
          }
         } 
        }
      },

      "/pet": {
        "put": {
          "tags": ["User"],
          "summary": "Update an existing pet",
          "description": "Update an existing pet by Id",
          "operationId": "updatePet",
          "requestBody": {
            "description": "Update an existent pet in the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            },
            "405": {
              "description": "Validation exception"
            }
          },
          "security": [
            {
              "petstore_auth": ["write:pets", "read:pets"]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "Pet": {
          "required": ["name", "photoUrls"],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "name": {
              "type": "string",
              "example": "doggie"
            },
            "category": {
              "$ref": "#/components/schemas/Category"
            },
            "photoUrls": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "type": "string",
                "xml": {
                  "name": "photoUrl"
                }
              }
            },
            "tags": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "status": {
              "type": "string",
              "description": "pet status in the store",
              "enum": ["available", "pending", "sold"]
            }
          },
          "xml": {
            "name": "pet"
          }
        }
      },
      "requestBodies": {
        "Pet": {
          "description": "Pet object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "petstore_auth": {
          "type": "oauth2",
          "flows": {
            "implicit": {
              "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
              "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
              }
            }
          }
        },
        "api_key": {
          "type": "apiKey",
          "name": "api_key",
          "in": "header"
        }
      }
    }
  }
  